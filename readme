Α)  
    Τίτλος μαθήματος:   Ανάπτυξη Λογισμικού για Αλγοριθμικά Προβλήματα
    
    Τίτλος Project:     Μέρος 2ο : Κατακερματισμός και αναζήτηση χρονοσειρών στη C++
                        


    Α μέρος (nearest neighbor):

    Σύντομη περιγραφή:
    - Το main πρόγραμμα search αφού διαβάσει τα arguments καλεί, ανάλογα με τον algorithm και τη method που δόθηκαν, την αντίστοιχη συνάρτηση
    από το search_methods.hpp. Κάθε συνάρτηση διαβάζει τα αρχεία, εισάγει τις καμπύλες στο κατάλληλο hash table και καλώντας τους απαραίτητους
    αλγόριθμους παράγει τα αποτελέσματα στο outputFile.


    Προσθήκες και λεπτομερής περιγραφή:
    - Προστέθηκε extra στη main το optional argument "-nobrute" το οποίο αν δοθεί δεν υπολογίζονται τα true distances για εξοικονόμηση
    χρόνου αν και όπου αυτό χρειαστεί.
    - Προστέθηκε στο point_functions.hpp η δομή "ClassCurve" που αποτελείται από πολλά "ClassPoint" και οι συναρτήσεις "curve_parsing" και 
    "discrete_frechet_distance" που υλοποιούνται στο point_functions.cpp και η πρώτη λειτουργεί για points με 1 διάσταση (value της 
    χρονοσειράς) ή 2 διαστάσεις (value και χρόνος), ενώ η δεύτερη υπολογίζει τη διακριτή frechet απόσταση με την τεχνική του δυναμικού 
    προγραμματισμού.
    - Προστέθηκαν στο algorithms.hpp οι συναρτήσεις "lsh_approximate_NN" και "true_NN" για καμπύλες και χρησιμοποιoύνται είτε για discrete
    είτε για continuous frechet. Επιπλέον στο algorithms.cpp υλοποιείται η "cont_convert_curve" που μετατρέπει τις "ClassCurve" σε
    "Curve" του δοσμένου κώδικα, κατάλληλη δηλαδή κλάση για να υπολογιστεί η continuous frechet distance.
    - Προστέθηκε το αρχείο grid_table.hpp/cpp όπου υλοποιείται η δομή "grid_table", η οποία είναι υπεύθυνη κατά το insert να μετατρέπει τις 
    καμπύλες σε grid-καμπύλες, δουλεύει για 1D ή 2D καμπύλες/grid, ενώ στο τέλος καλεί τις συναρτήσεις lsh της 1ης εργασίας.
    - Προστέθηκαν στο hash_functions οι συναρτήσεις "snapToGrid", "padding", "keyLSHvector", "filtering", "minima_maxima" που χρησιμοποιούνται
    από το εκάστοτε "grid_table" για το σταδιακό hashing της καμπύλης.
    - Στο makefile προστέθηκαν πιθανά arguments για κάθε ερώτημα (uncomment), για γρήγορη εκτέλεση "make run".
    - Τα αρχεία config.hpp/cpp, curve.hpp/cpp, frechet.hpp/cpp, interval.hpp/cpp, point.hpp/cpp, simplification.hpp/cpp, types.hpp έχουν
    παρθεί από το github.com/derohde/Fred.git και χρησιμοποιούνται για τον υπολογισμό της continuous frechet απόστασης.


    Aλλαγές:
    - Έγινε μετονομασία της κλάσης Point σε CurvePoint.
    - Τα keys των ClassPoint είναι πλέον τύπου string, αναλόγως και των καμπυλών.


    Παρατηρήσεις επί των αποτελεσμάτων:
    - Στο Aii) τα καλύτερα αποτελέσματα (όσον αφορά το MAF) παίρνουμε με w ~ 600 και δ ~ 1.0 να δίνουν MAF ~ 1-1.2, ενώ με μεγαλύτερο w 
    βελτιώνεται λίγο ο χρόνος αλλά οι χρονοσειρές με μεγάλο true distance από τον ΝΝ τους βγάζουν λίγο χειρότερο approximation factor.
    - Στο Aiii) τα καλύτερα αποτελέσματα παίρνουμε με w ~ 650-700 και δ ~ 1.0 με ανάλογα αποτελέσματα MAF και καλύτερους lsh χρόνους
    από το Aii) εξαιτίας της μείωσης των σημείων στο "filtering"/"minima_maxima".



    B μέρος (clustering):

    Σύντομη περιγραφή:


    Προσθήκες:


    Παρατηρήσεις επί των αποτελεσμάτων:



---------------------------------------------------------------------------------------------------------------------------------------------------



Β) 
    Αρχεία κώδικα:

ΔΟΜΗ:

|>include                
        -   -   -   -


|>programs
        -   -   -   -


|>src
        -   -   -   -



|readme



ΠΕΡΙΓΡΑΦΗ:






---------------------------------------------------------------------------------------------------------------------------------------------------



Γ)
    Οδηγίες μεταγλώττισης:
                        
                -Χρήση <make> στο κοινό Makefile του αρχικού καταλόγου ή ξεχωριστά σε κάθε program.



---------------------------------------------------------------------------------------------------------------------------------------------------



Δ)
    Οδηγίες χρήσης:     
                        
                -Χρήση <make clean> για καθάρισμα των παραγόμενων αρχείων.
                -Χρήση <make run> στον κατάλογο του κάθε program για εκτέλεση με προκαθορισμένα arguments στη main.
                -Χρήση <make valgrind> στον κατάλογο του κάθε program για εκτέλεση με εμφάνιση memory leaks.
                            
                



---------------------------------------------------------------------------------------------------------------------------------------------------



E)
    Στοιχεία φοιτητών:      
                    
                    Ηλίας Οικονόμου - 1115201200133
                    Κωνσταντίνος Αντζουλίδης - 1115201500009
                        

